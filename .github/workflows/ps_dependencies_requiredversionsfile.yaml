name: Bump RequiredVersions PowerShell Dependencies
# This workflow bumps the PowerShell dependencies in the PowerShell/ScubaGear/RequiredVersions.ps1 file.
# It runs on a schedule and can also be triggered manually.
# The workflow uses the PSScriptAnalyzer and PSDepend modules to analyze and update the dependencies.
on:
  schedule:
    - cron: "15 6 * * 1-5"
  workflow_dispatch:

jobs:
  bump-dependencies:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (if needed)
        run: |
          pwsh -Command "if (-not (Get-Module -ListAvailable -Name PSScriptAnalyzer)) { Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser }"
          pwsh -Command "if (-not (Get-Module -ListAvailable -Name PSDepend)) { Install-Module -Name PSDepend -Force -Scope CurrentUser }"

      - name: Bump PowerShell dependencies
        run: |
          pwsh -File ./utils/workflow/BumpPsDependencies.ps1

      - name: Commit changes and create new branch
        id: create_branch
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ./PowerShell/ScubaGear/RequiredVersions.ps1
          git commit -m 'Bump PowerShell dependencies' || echo "No changes to commit"
          $BRANCH_NAME="bump-dependencies-$(date +%Y%m%d%H%M%S)"
          git branch $BRANCH_NAME
          git push -u origin $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Trigger smoke test workflow
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
        run: |
          pwsh -Command "Invoke-RestMethod -Method Post -Uri 'https://api.github.com/repos/${{ github.repository }}/actions/workflows/run_smoke_test.yaml/dispatches' -Headers @{Authorization = 'Bearer $env:GITHUB_TOKEN'; Accept = 'application/vnd.github+json'} -Body (@{ref = '$env:BRANCH_NAME'} | ConvertTo-Json)"
