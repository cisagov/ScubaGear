[
    {
        "ActualValue":  "",
        "Commandlet":  [
                           "Get-MgBetaSubscribedSku",
                           "Get-PrivilegedUser"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.7.3v1",
        "ReportDetails":  "0 admin(s) that are not cloud-only found",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/Not-Implemented",
        "PolicyId":  "MS.AAD.4.1v1",
        "ReportDetails":  "This product does not currently have the capability to check compliance for this policy. See \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/aad.md#msaad41v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on manual check",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/Not-Implemented",
        "PolicyId":  "MS.AAD.2.2v1",
        "ReportDetails":  "This product does not currently have the capability to check compliance for this policy. See \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/aad.md#msaad22v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on manual check",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/Not-Implemented",
        "PolicyId":  "MS.AAD.8.3v1",
        "ReportDetails":  "This product does not currently have the capability to check compliance for this policy. See \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/aad.md#msaad83v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on manual check",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-MgBetaDirectorySetting"
                       ],
        "Criticality":  "Shall/Not-Implemented",
        "PolicyId":  "MS.AAD.5.4v1",
        "ReportDetails":  "This configuration setting has been deprecated and we are in the process of removing it from the baseline.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-MgBetaPolicyAuthenticationMethodPolicy"
                       ],
        "Criticality":  "Shall/Not-Implemented",
        "PolicyId":  "MS.AAD.3.5v1",
        "ReportDetails":  "This policy is only applicable if the tenant has their Manage Migration feature set to Migration Complete. See \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/aad.md#msaad34v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for more info",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            "preMigration"
                        ],
        "Commandlet":  [
                           "Get-MgBetaPolicyAuthenticationMethodPolicy"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.3.4v1",
        "ReportDetails":  "Requirement not met",
        "RequirementMet":  false
    },
    {
        "ActualValue":  {
                            "AdditionalProperties":  {
                                                         "@odata.type":  "#microsoft.graph.microsoftAuthenticatorAuthenticationMethodConfiguration",
                                                         "featureSettings":  {
                                                                                 "companionAppAllowedState":  {
                                                                                                                  "excludeTarget":  "@{id=00000000-0000-0000-0000-000000000000; targetType=group}",
                                                                                                                  "includeTarget":  "@{id=all_users; targetType=group}",
                                                                                                                  "state":  "default"
                                                                                                              },
                                                                                 "displayAppInformationRequiredState":  {
                                                                                                                            "excludeTarget":  "@{id=00000000-0000-0000-0000-000000000000; targetType=group}",
                                                                                                                            "includeTarget":  "@{id=all_users; targetType=group}",
                                                                                                                            "state":  "enabled"
                                                                                                                        },
                                                                                 "displayLocationInformationRequiredState":  {
                                                                                                                                 "excludeTarget":  "@{id=00000000-0000-0000-0000-000000000000; targetType=group}",
                                                                                                                                 "includeTarget":  "@{id=all_users; targetType=group}",
                                                                                                                                 "state":  "enabled"
                                                                                                                             },
                                                                                 "numberMatchingRequiredState":  {
                                                                                                                     "excludeTarget":  "@{id=00000000-0000-0000-0000-000000000000; targetType=group}",
                                                                                                                     "includeTarget":  "@{id=all_users; targetType=group}",
                                                                                                                     "state":  "enabled"
                                                                                                                 }
                                                                             },
                                                         "includeTargets":  [
                                                                                {
                                                                                    "authenticationMode":  "any",
                                                                                    "id":  "all_users",
                                                                                    "isRegistrationRequired":  false,
                                                                                    "targetType":  "group"
                                                                                }
                                                                            ],
                                                         "includeTargets@odata.context":  "https://graph.microsoft.com/beta/$metadata#policies/authenticationMethodsPolicy/authenticationMethodConfigurations(\u0027MicrosoftAuthenticator\u0027)/microsoft.graph.microsoftAuthenticatorAuthenticationMethodConfiguration/includeTargets",
                                                         "isSoftwareOathEnabled":  true
                                                     },
                            "ExcludeTargets":  [

                                               ],
                            "Id":  "MicrosoftAuthenticator",
                            "State":  "enabled"
                        },
        "Commandlet":  [
                           "Get-MgBetaPolicyAuthenticationMethodPolicy"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.3.3v1",
        "ReportDetails":  "Requirement not met",
        "RequirementMet":  false
    },
    {
        "ActualValue":  {
                            "all_admin_consent_policies":  [
                                                               {
                                                                   "Name":  "EnableAdminConsentRequests",
                                                                   "SettingsGroup":  "Consent Policy Settings",
                                                                   "Value":  "false"
                                                               }
                                                           ]
                        },
        "Commandlet":  [
                           "Get-MgBetaDirectorySetting"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.5.3v1",
        "ReportDetails":  "Requirement not met",
        "RequirementMet":  false
    },
    {
        "ActualValue":  {
                            "all_allow_invite_values":  [
                                                            {
                                                                "AllowInvitesFromValue":  "adminsAndGuestInviters",
                                                                "PolicyId":  "authorizationPolicy"
                                                            }
                                                        ]
                        },
        "Commandlet":  [
                           "Get-MgBetaPolicyAuthorizationPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.AAD.8.2v1",
        "ReportDetails":  "Permission level set to \"adminsAndGuestInviters\" (authorizationPolicy)",
        "RequirementMet":  true
    },
    {
        "ActualValue":  {
                            "all_allowed_create_values":  [
                                                              {
                                                                  "DefaultUser_AllowedToCreateApps":  false,
                                                                  "PolicyId":  "authorizationPolicy"
                                                              }
                                                          ]
                        },
        "Commandlet":  [
                           "Get-MgBetaPolicyAuthorizationPolicy"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.5.1v1",
        "ReportDetails":  "0 authorization policies found that allow non-admin users to register third-party applications",
        "RequirementMet":  true
    },
    {
        "ActualValue":  {
                            "all_grant_policy_values":  [
                                                            {
                                                                "DefaultUser_DefaultGrantPolicy":  [
                                                                                                       "ManagePermissionGrantsForOwnedResource.microsoft-dynamically-managed-permissions-for-chat",
                                                                                                       "ManagePermissionGrantsForOwnedResource.microsoft-dynamically-managed-permissions-for-team",
                                                                                                       "ManagePermissionGrantsForSelf.microsoft-user-default-legacy"
                                                                                                   ],
                                                                "PolicyId":  "authorizationPolicy"
                                                            }
                                                        ]
                        },
        "Commandlet":  [
                           "Get-MgBetaPolicyAuthorizationPolicy"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.5.2v1",
        "ReportDetails":  "1 authorization policies found that allow non-admin users to consent to third-party applications:\u003cbr/\u003eauthorizationPolicy",
        "RequirementMet":  false
    },
    {
        "ActualValue":  {
                            "all_roleid_values":  [
                                                      {
                                                          "GuestUserRoleId":  "10dae51f-b6af-4016-8d66-8c2a99b929b3",
                                                          "GuestUserRoleIdString":  "Limited access",
                                                          "Id":  "authorizationPolicy"
                                                      }
                                                  ]
                        },
        "Commandlet":  [
                           "Get-MgBetaPolicyAuthorizationPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.AAD.8.1v1",
        "ReportDetails":  "Permission level set to \"Limited access\" (authorizationPolicy)",
        "RequirementMet":  true
    },
    {
        "ActualValue":  {
                            "federated_domains":  [

                                                  ],
                            "invalid_domains":  [

                                                ],
                            "valid_domains":  [

                                              ]
                        },
        "Commandlet":  [
                           "Get-MgBetaDomain"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.6.1v1",
        "ReportDetails":  "Requirement not met",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-MgBetaIdentityConditionalAccessPolicy"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.3.1v1",
        "ReportDetails":  "0 conditional access policy(s) found that meet(s) all requirements. \u003ca href=\u0027#caps\u0027\u003eView all CA policies\u003c/a\u003e.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-MgBetaIdentityConditionalAccessPolicy"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.3.6v1",
        "ReportDetails":  "0 conditional access policy(s) found that meet(s) all requirements. \u003ca href=\u0027#caps\u0027\u003eView all CA policies\u003c/a\u003e.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-MgBetaIdentityConditionalAccessPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.AAD.3.7v1",
        "ReportDetails":  "0 conditional access policy(s) found that meet(s) all requirements. \u003ca href=\u0027#caps\u0027\u003eView all CA policies\u003c/a\u003e.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-MgBetaIdentityConditionalAccessPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.AAD.3.8v1",
        "ReportDetails":  "0 conditional access policy(s) found that meet(s) all requirements. \u003ca href=\u0027#caps\u0027\u003eView all CA policies\u003c/a\u003e.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-MgBetaSubscribedSku",
                           "Get-PrivilegedRole"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.7.8v1",
        "ReportDetails":  "0 role(s) or group(s) without notification e-mail configured for Global Administrator activations found",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            "Application Administrator",
                            "Exchange Administrator",
                            "Global Administrator",
                            "Privileged Role Administrator",
                            "SharePoint Administrator",
                            "User Administrator"
                        ],
        "Commandlet":  [
                           "Get-MgBetaSubscribedSku",
                           "Get-PrivilegedRole"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.7.4v1",
        "ReportDetails":  "6 role(s) that contain users with permanent active assignment:\u003cbr/\u003eApplication Administrator, Exchange Administrator, Global Administrator, Privileged Role Administrator, SharePoint Administrator, User Administrator",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            "Cloud Application Administrator(Directory Role)",
                            "Exchange Administrator(Directory Role)",
                            "Global Administrator(Directory Role)",
                            "Hybrid Identity Administrator(Directory Role)",
                            "Privileged Role Administrator(Directory Role)",
                            "SharePoint Administrator(Directory Role)"
                        ],
        "Commandlet":  [
                           "Get-MgBetaSubscribedSku",
                           "Get-PrivilegedRole"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.7.7v1",
        "ReportDetails":  "6 role(s) or group(s) without notification e-mail configured for role assignments found:\u003cbr/\u003eCloud Application Administrator(Directory Role), Exchange Administrator(Directory Role), Global Administrator(Directory Role), Hybrid Identity Administrator(Directory Role), Privileged Role Administrator(Directory Role), SharePoint Administrator(Directory Role)",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            "Cloud Application Administrator(Directory Role)",
                            "Exchange Administrator(Directory Role)",
                            "Hybrid Identity Administrator(Directory Role)",
                            "Privileged Role Administrator(Directory Role)",
                            "SharePoint Administrator(Directory Role)"
                        ],
        "Commandlet":  [
                           "Get-MgBetaSubscribedSku",
                           "Get-PrivilegedRole"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.AAD.7.9v1",
        "ReportDetails":  "5 role(s) or group(s) without notification e-mail configured for role activations found:\u003cbr/\u003eCloud Application Administrator(Directory Role), Exchange Administrator(Directory Role), Hybrid Identity Administrator(Directory Role), Privileged Role Administrator(Directory Role), SharePoint Administrator(Directory Role)",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            "Global Administrator",
                            "Privileged Role Administrator",
                            "SharePoint Administrator",
                            "User Administrator"
                        ],
        "Commandlet":  [
                           "Get-MgBetaSubscribedSku",
                           "Get-PrivilegedRole"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.7.5v1",
        "ReportDetails":  "4 role(s) assigned to users outside of PIM:\u003cbr/\u003eGlobal Administrator, Privileged Role Administrator, SharePoint Administrator, User Administrator",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            "Global Administrator(Directory Role)"
                        ],
        "Commandlet":  [
                           "Get-MgBetaSubscribedSku",
                           "Get-PrivilegedRole"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.7.6v1",
        "ReportDetails":  "1 role(s) or group(s) allowing activation without approval found:\u003cbr/\u003eGlobal Administrator(Directory Role)",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            "Jane Doe",
                            "John Public"
                        ],
        "Commandlet":  [
                           "Get-MgBetaSubscribedSku",
                           "Get-PrivilegedUser"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.7.1v1",
        "ReportDetails":  "2 global admin(s) found:\u003cbr/\u003eJane Doe, John Public",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            "Jane Doe",
                            "John Public"
                        ],
        "Commandlet":  [
                           "Get-MgBetaSubscribedSku",
                           "Get-PrivilegedUser"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.7.2v1",
        "ReportDetails":  "Requirement not met: Least Privilege Score = 2 (should be 1 or less)",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            "MS.AAD.1.1v1 Legacy authentication SHALL be blocked"
                        ],
        "Commandlet":  [
                           "Get-MgBetaIdentityConditionalAccessPolicy"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.1.1v1",
        "ReportDetails":  "1 conditional access policy(s) found that meet(s) all requirements:\u003cbr/\u003eMS.AAD.1.1v1 Legacy authentication SHALL be blocked. \u003ca href=\u0027#caps\u0027\u003eView all CA policies\u003c/a\u003e.",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            "MS.AAD.2.1v1 Users detected as high risk SHALL be blocked"
                        ],
        "Commandlet":  [
                           "Get-MgBetaIdentityConditionalAccessPolicy"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.2.1v1",
        "ReportDetails":  "1 conditional access policy(s) found that meet(s) all requirements:\u003cbr/\u003eMS.AAD.2.1v1 Users detected as high risk SHALL be blocked. \u003ca href=\u0027#caps\u0027\u003eView all CA policies\u003c/a\u003e.",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            "MS.AAD.2.3v1 Sign-ins detected as high risk SHALL be blocked"
                        ],
        "Commandlet":  [
                           "Get-MgBetaIdentityConditionalAccessPolicy"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.2.3v1",
        "ReportDetails":  "1 conditional access policy(s) found that meet(s) all requirements:\u003cbr/\u003eMS.AAD.2.3v1 Sign-ins detected as high risk SHALL be blocked. \u003ca href=\u0027#caps\u0027\u003eView all CA policies\u003c/a\u003e.",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            "MS.AAD.3.2v1 If phishing-resistant MFA has not been enforced, an alternative MFA method SHALL be enforced for all users"
                        ],
        "Commandlet":  [
                           "Get-MgBetaIdentityConditionalAccessPolicy"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.AAD.3.2v1",
        "ReportDetails":  "1 conditional access policy(s) found that meet(s) all requirements:\u003cbr/\u003eMS.AAD.3.2v1 If phishing-resistant MFA has not been enforced, an alternative MFA method SHALL be enforced for all users. \u003ca href=\u0027#caps\u0027\u003eView all CA policies\u003c/a\u003e.",
        "RequirementMet":  true
    },
    {
        "ActualValue":  84,
        "Commandlet":  [
                           "Get-MgBetaUser"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.DEFENDER.6.2v1",
        "ReportDetails":  "Requirement not met. 84 tenant users without M365 Advanced Auditing feature assigned. To review and assign users the Microsoft 365 Advanced Auditing feature, see \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/defender.md#msdefender62v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e. To get a list of all users without the license feature run the following: Get-MgBetaUser -Filter \"not assignedPlans/any(a:a/servicePlanId eq 2f442157-a11c-46b9-ae5b-6e39ff4e5849 and a/capabilityStatus eq \u0027Enabled\u0027)\" -ConsistencyLevel eventual -Count UserCount -All | Select-Object DisplayName,UserPrincipalName",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/Not-Implemented",
        "PolicyId":  "MS.DEFENDER.6.3v1",
        "ReportDetails":  "This product does not currently have the capability to check compliance for this policy. See \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/defender.md#msdefender63v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on manual check",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/Not-Implemented",
        "PolicyId":  "MS.DEFENDER.4.5v1",
        "ReportDetails":  "This product does not currently have the capability to check compliance for this policy. See \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/defender.md#msdefender45v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on manual check",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/Not-Implemented",
        "PolicyId":  "MS.DEFENDER.4.6v1",
        "ReportDetails":  "This product does not currently have the capability to check compliance for this policy. See \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/defender.md#msdefender46v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on manual check",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/Not-Implemented",
        "PolicyId":  "MS.DEFENDER.5.2v1",
        "ReportDetails":  "This product does not currently have the capability to check compliance for this policy. See \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/defender.md#msdefender52v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on manual check",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            {
                                "Accounts":  [

                                             ],
                                "Action":  "",
                                "Name":  "Strict Preset Security Policy"
                            },
                            {
                                "Accounts":  [

                                             ],
                                "Action":  "",
                                "Name":  "Standard Preset Security Policy"
                            }
                        ],
        "Commandlet":  [
                           "Get-AntiPhishPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.DEFENDER.2.2v1",
        "ReportDetails":  "Not all agency domains are included for targeted protection in Strict or Standard policy.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            {
                                "Accounts":  [

                                             ],
                                "Action":  "",
                                "Name":  "Strict Preset Security Policy"
                            },
                            {
                                "Accounts":  [

                                             ],
                                "Action":  "",
                                "Name":  "Standard Preset Security Policy"
                            }
                        ],
        "Commandlet":  [
                           "Get-AntiPhishPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.DEFENDER.2.3v1",
        "ReportDetails":  "Not all partner domains are included for targeted protection in Strict or Standard policy.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            {
                                "Accounts":  [

                                             ],
                                "Action":  "Quarantine",
                                "Name":  "Strict Preset Security Policy1681329955447"
                            },
                            {
                                "Accounts":  [

                                             ],
                                "Action":  "Quarantine",
                                "Name":  "Standard Preset Security Policy1659535429826"
                            }
                        ],
        "Commandlet":  [
                           "Get-AntiPhishPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.DEFENDER.2.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  {
                            "ATPProtectionPolicies":  false
                        },
        "Commandlet":  [
                           "Get-ATPProtectionPolicyRule"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.DEFENDER.1.5v1",
        "ReportDetails":  "Requirement not met",
        "RequirementMet":  false
    },
    {
        "ActualValue":  {
                            "Credit_Card":  [
                                                "Baseline Rule"
                                            ],
                            "ITIN":  [
                                         "Baseline Rule"
                                     ],
                            "SSN":  [
                                        "Baseline Rule"
                                    ]
                        },
        "Commandlet":  [
                           "Get-DlpComplianceRule"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.DEFENDER.4.1v2",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  {
                            "Devices":  [

                                        ],
                            "Exchange":  [
                                             {
                                                 "Locations":  [
                                                                   "All"
                                                               ],
                                                 "Name":  "Default Office 365 DLP policy",
                                                 "Workload":  "Exchange, SharePoint, OneDriveForBusiness, Teams, OnPremisesScanner"
                                             }
                                         ],
                            "OneDrive":  [
                                             {
                                                 "Locations":  [
                                                                   "All"
                                                               ],
                                                 "Name":  "Default Office 365 DLP policy",
                                                 "Workload":  "Exchange, SharePoint, OneDriveForBusiness, Teams, OnPremisesScanner"
                                             }
                                         ],
                            "SharePoint":  [
                                               {
                                                   "Locations":  [
                                                                     "All"
                                                                 ],
                                                   "Name":  "Default Office 365 DLP policy",
                                                   "Workload":  "Exchange, SharePoint, OneDriveForBusiness, Teams, OnPremisesScanner"
                                               }
                                           ],
                            "Teams":  [
                                          {
                                              "Locations":  [
                                                                "All"
                                                            ],
                                              "Name":  "Default Office 365 DLP policy",
                                              "Workload":  "Exchange, SharePoint, OneDriveForBusiness, Teams, OnPremisesScanner"
                                          }
                                      ]
                        },
        "Commandlet":  [
                           "Get-DLPCompliancePolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.DEFENDER.4.2v1",
        "ReportDetails":  "DLP custom policy applied to the following locations: Exchange, OneDrive, SharePoint, Teams. Custom policy protecting sensitive info types NOT applied to: Devices. Devices location requires DLP for Endpoint licensing and at least one registered device. For full policy details, see the ActualValue field in the results file: ./TestResults.json",
        "RequirementMet":  false
    },
    {
        "ActualValue":  {
                            "EOPProtectionPolicies":  false
                        },
        "Commandlet":  [
                           "Get-EOPProtectionPolicyRule"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.DEFENDER.1.4v1",
        "ReportDetails":  "Requirement not met",
        "RequirementMet":  false
    },
    {
        "ActualValue":  {
                            "StandardPresetState":  true,
                            "StrictPresetState":  true
                        },
        "Commandlet":  [
                           "Get-EOPProtectionPolicyRule",
                           "Get-ATPProtectionPolicyRule"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.DEFENDER.1.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  {
                            "StandardSetToAll":  true,
                            "StrictSetToAll":  false
                        },
        "Commandlet":  [
                           "Get-ATPProtectionPolicyRule"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.DEFENDER.1.3v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  {
                            "StandardSetToAll":  true,
                            "StrictSetToAll":  false
                        },
        "Commandlet":  [
                           "Get-EOPProtectionPolicyRule"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.DEFENDER.1.2v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-DlpComplianceRule"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.DEFENDER.4.3v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-DlpComplianceRule"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.DEFENDER.4.4v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-ProtectionAlert"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.DEFENDER.5.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            {
                                "EnableATPForSPOTeamsODB":  true,
                                "Identity":  "Default"
                            }
                        ],
        "Commandlet":  [
                           "Get-AtpPolicyForO365"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.DEFENDER.3.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            {
                                "Identity":  "Admin Audit Log Settings",
                                "UnifiedAuditLogIngestionEnabled":  true
                            }
                        ],
        "Commandlet":  [
                           "Get-AdminAuditLogConfig"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.DEFENDER.6.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/3rd Party",
        "PolicyId":  "MS.EXO.10.1v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo101v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/3rd Party",
        "PolicyId":  "MS.EXO.10.2v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo102v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/3rd Party",
        "PolicyId":  "MS.EXO.14.1v2",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo141v2\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/3rd Party",
        "PolicyId":  "MS.EXO.14.2v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo142v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/3rd Party",
        "PolicyId":  "MS.EXO.14.3v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo143v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/3rd Party",
        "PolicyId":  "MS.EXO.16.1v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo161v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/3rd Party",
        "PolicyId":  "MS.EXO.17.1v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo171v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/3rd Party",
        "PolicyId":  "MS.EXO.17.2v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo172v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/3rd Party",
        "PolicyId":  "MS.EXO.17.3v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo173v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/3rd Party",
        "PolicyId":  "MS.EXO.8.1v2",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo81v2\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/3rd Party",
        "PolicyId":  "MS.EXO.8.2v2",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo82v2\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/3rd Party",
        "PolicyId":  "MS.EXO.8.4v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo84v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/3rd Party",
        "PolicyId":  "MS.EXO.9.1v2",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo91v2\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/3rd Party",
        "PolicyId":  "MS.EXO.9.3v2",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo93v2\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/3rd Party",
        "PolicyId":  "MS.EXO.10.3v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo103v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/3rd Party",
        "PolicyId":  "MS.EXO.11.1v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo111v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/3rd Party",
        "PolicyId":  "MS.EXO.11.2v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo112v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/3rd Party",
        "PolicyId":  "MS.EXO.11.3v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo113v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/3rd Party",
        "PolicyId":  "MS.EXO.14.4v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo144v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/3rd Party",
        "PolicyId":  "MS.EXO.15.1v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo151v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/3rd Party",
        "PolicyId":  "MS.EXO.15.2v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo152v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/3rd Party",
        "PolicyId":  "MS.EXO.15.3v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo153v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/3rd Party",
        "PolicyId":  "MS.EXO.16.2v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo162v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/3rd Party",
        "PolicyId":  "MS.EXO.8.3v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo83v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/3rd Party",
        "PolicyId":  "MS.EXO.9.2v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo92v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/3rd Party",
        "PolicyId":  "MS.EXO.9.4v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo94v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/3rd Party",
        "PolicyId":  "MS.EXO.9.5v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/exo.md#msexo95v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            "NotInOrganization"
                        ],
        "Commandlet":  [
                           "Get-TransportRule"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.EXO.7.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            [
                                {
                                    "domain":  "tqhjy.onmicrosoft.com",
                                    "log":  [
                                                "@{query_method=traditional; query_name=selector1._domainkey.tqhjy.onmicrosoft.com; query_result=Query returned NXDomain}",
                                                "@{query_method=traditional; query_name=selector2._domainkey.tqhjy.onmicrosoft.com; query_result=Query returned NXDomain}",
                                                "@{query_method=traditional; query_name=selector1-tqhjy-onmicrosoft-com._domainkey.tqhjy.onmicrosoft.com; query_result=Query returned 2 txt records}"
                                            ],
                                    "rdata":  [
                                                  "v=DKIM1; k=rsa; p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAohoPDhGToRO8y7acaWL2w15wsCmwabxgTwODro2c1BeRYXfnUMStICo3w4ZrYDtGZDSA7hm0x7OHujF1CoQnXiBmrQ154wtomPyx3Op/VC6+b9di4z15XBvhXh/fLBUdEJ6wsybMLmQ+WPQA6vsM3UN5Cv5rl2SylFoM//eLmw5R6NmMIj3GQg9b+vQl2cKNX",
                                                  "qII2gZrB07P6xt2wW1VA/LPjdRFUEys9YzBgOqM53VaODWDXDIvUH/nPRVAtOEsV19u66jyzZnzcz9a7ATxizix7DnySzI3koVlOGi/+dLx8FYIAZ/75wkH1O/gH8/n4C66uwRm/PMW+4JzVwLY+QIDAQAB;"
                                              ]
                                },
                                {
                                    "domain":  "tqhjy.mail.onmicrosoft.com",
                                    "log":  [
                                                "@{query_method=traditional; query_name=selector1._domainkey.tqhjy.mail.onmicrosoft.com; query_result=Query returned NXDomain}",
                                                "@{query_method=traditional; query_name=selector2._domainkey.tqhjy.mail.onmicrosoft.com; query_result=Query returned NXDomain}",
                                                "@{query_method=traditional; query_name=selector1-tqhjy-mail-onmicrosoft-com._domainkey.tqhjy.mail.onmicrosoft.com; query_result=Query returned NXDomain}",
                                                "@{query_method=traditional; query_name=selector2-tqhjy-mail-onmicrosoft-com._domainkey.tqhjy.mail.onmicrosoft.com; query_result=Query returned NXDomain}"
                                            ],
                                    "rdata":  [

                                              ]
                                }
                            ],
                            [
                                {
                                    "AdminDisplayName":  "",
                                    "Algorithm":  "RsaSHA256",
                                    "BodyCanonicalization":  "Relaxed",
                                    "DistinguishedName":  "CN=tqhjy.onmicrosoft.com,CN=Dkim Signing config,CN=Transport Settings,CN=Configuration,CN=tqhjy.onmicrosoft.com,CN=ConfigurationUnits,DC=NAMPR09A006,DC=PROD,DC=OUTLOOK,DC=COM",
                                    "Domain":  "tqhjy.onmicrosoft.com",
                                    "Enabled":  true,
                                    "ExchangeObjectId":  "ea1866b3-b7fa-4dbe-b9c9-48087391a536",
                                    "ExchangeVersion":  "0.20 (15.0.0.0)",
                                    "Guid":  "476371c0-bf15-4101-84a7-a3a03b4266f1",
                                    "HeaderCanonicalization":  "Relaxed",
                                    "Id":  "tqhjy.onmicrosoft.com",
                                    "Identity":  "tqhjy.onmicrosoft.com",
                                    "IncludeKeyExpiration":  false,
                                    "IncludeSignatureCreationTime":  true,
                                    "IsDefault":  true,
                                    "IsValid":  true,
                                    "KeyCreationTime":  "/Date(1653603718610)/",
                                    "LastChecked":  "/Date(1653603718610)/",
                                    "Name":  "tqhjy.onmicrosoft.com",
                                    "NumberOfBytesToSign":  "All",
                                    "ObjectCategory":  "NAMPR09A006.PROD.OUTLOOK.COM/Configuration/Schema/ms-Exch-Hosted-Content-Filter-Config",
                                    "ObjectClass":  [
                                                        "top",
                                                        "msExchHostedContentFilterConfig"
                                                    ],
                                    "ObjectState":  "Unchanged",
                                    "OrganizationId":  "NAMPR09A006.PROD.OUTLOOK.COM/Microsoft Exchange Hosted Organizations/tqhjy.onmicrosoft.com - NAMPR09A006.PROD.OUTLOOK.COM/ConfigurationUnits/tqhjy.onmicrosoft.com/Configuration",
                                    "OrganizationalUnitRoot":  "tqhjy.onmicrosoft.com",
                                    "OriginatingServer":  "BY1PR09A06DC005.NAMPR09A006.PROD.OUTLOOK.COM",
                                    "RotateOnDate":  "/Date(1653949318610)/",
                                    "Selector1CNAME":  "selector1-tqhjy-onmicrosoft-com._domainkey.tqhjy.onmicrosoft.com",
                                    "Selector1KeySize":  2048,
                                    "Selector1PublicKey":  "v=DKIM1; k=rsa; p=Tm90aGluZyB0byBzZWUgaGVyZS4gIE1vdmUgYWxvbmcuLi4gbW92ZSBhbG9uZy4;",
                                    "Selector2CNAME":  "selector2-tqhjy-onmicrosoft-com._domainkey.tqhjy.onmicrosoft.com",
                                    "Selector2KeySize":  2048,
                                    "Selector2PublicKey":  "v=DKIM1; k=rsa; p=Tm90aGluZyB0byBzZWUgaGVyZS4gIE1vdmUgYWxvbmcuLi4gbW92ZSBhbG9uZy4;",
                                    "SelectorAfterRotateOnDate":  "selector2",
                                    "SelectorBeforeRotateOnDate":  "selector1",
                                    "Status":  "Valid",
                                    "WhenChanged":  "/Date(1723812070000)/",
                                    "WhenChangedUTC":  "/Date(1723812070000)/",
                                    "WhenCreated":  "/Date(1619484596000)/",
                                    "WhenCreatedUTC":  "/Date(1619484596000)/"
                                },
                                {
                                    "AdminDisplayName":  "",
                                    "Algorithm":  "RsaSHA256",
                                    "BodyCanonicalization":  "Relaxed",
                                    "DistinguishedName":  "CN=tqhjy.mail.onmicrosoft.com,CN=Dkim Signing config,CN=Transport Settings,CN=Configuration,CN=tqhjy.onmicrosoft.com,CN=ConfigurationUnits,DC=NAMPR09A006,DC=PROD,DC=OUTLOOK,DC=COM",
                                    "Domain":  "tqhjy.mail.onmicrosoft.com",
                                    "Enabled":  false,
                                    "ExchangeObjectId":  "7b3222de-5b72-4493-8491-930b8a85faa0",
                                    "ExchangeVersion":  "0.20 (15.0.0.0)",
                                    "Guid":  "7b3222de-5b72-4493-8491-930b8a85faa0",
                                    "HeaderCanonicalization":  "Relaxed",
                                    "Id":  "tqhjy.mail.onmicrosoft.com",
                                    "Identity":  "tqhjy.mail.onmicrosoft.com",
                                    "IncludeKeyExpiration":  false,
                                    "IncludeSignatureCreationTime":  true,
                                    "IsDefault":  false,
                                    "IsValid":  true,
                                    "KeyCreationTime":  "/Date(1701717485274)/",
                                    "LastChecked":  "/Date(1701717485274)/",
                                    "Name":  "tqhjy.mail.onmicrosoft.com",
                                    "NumberOfBytesToSign":  "All",
                                    "ObjectCategory":  "NAMPR09A006.PROD.OUTLOOK.COM/Configuration/Schema/ms-Exch-Hosted-Content-Filter-Config",
                                    "ObjectClass":  [
                                                        "top",
                                                        "msExchHostedContentFilterConfig"
                                                    ],
                                    "ObjectState":  "Unchanged",
                                    "OrganizationId":  "NAMPR09A006.PROD.OUTLOOK.COM/Microsoft Exchange Hosted Organizations/tqhjy.onmicrosoft.com - NAMPR09A006.PROD.OUTLOOK.COM/ConfigurationUnits/tqhjy.onmicrosoft.com/Configuration",
                                    "OrganizationalUnitRoot":  "tqhjy.onmicrosoft.com",
                                    "OriginatingServer":  "BY1PR09A06DC005.NAMPR09A006.PROD.OUTLOOK.COM",
                                    "RotateOnDate":  "/Date(1701717485274)/",
                                    "Selector1CNAME":  "selector1-tqhjy-mail-onmicrosoft-com._domainkey.tqhjy.onmicrosoft.com",
                                    "Selector1KeySize":  2048,
                                    "Selector1PublicKey":  "v=DKIM1; k=rsa; p=Tm90aGluZyB0byBzZWUgaGVyZS4gIE1vdmUgYWxvbmcuLi4gbW92ZSBhbG9uZy4;",
                                    "Selector2CNAME":  "selector2-tqhjy-mail-onmicrosoft-com._domainkey.tqhjy.onmicrosoft.com",
                                    "Selector2KeySize":  2048,
                                    "Selector2PublicKey":  "v=DKIM1; k=rsa; p=Tm90aGluZyB0byBzZWUgaGVyZS4gIE1vdmUgYWxvbmcuLi4gbW92ZSBhbG9uZy4;",
                                    "SelectorAfterRotateOnDate":  "selector1",
                                    "SelectorBeforeRotateOnDate":  "selector2",
                                    "Status":  "Valid",
                                    "WhenChanged":  "/Date(1723860474000)/",
                                    "WhenChangedUTC":  "/Date(1723860474000)/",
                                    "WhenCreated":  "/Date(1701717486000)/",
                                    "WhenCreatedUTC":  "/Date(1701717486000)/"
                                }
                            ]
                        ],
        "Commandlet":  [
                           "Get-DkimSigningConfig",
                           "Get-ScubaDkimRecord",
                           "Get-AcceptedDomain"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.EXO.3.1v1",
        "ReportDetails":  "1 agency domain(s) found in violation: tqhjy.mail.onmicrosoft.com",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            {
                                "AddressBookPolicyRoutingEnabled":  false,
                                "AdminDisplayName":  "",
                                "AgentGeneratedMessageLoopDetectionInSmtpEnabled":  true,
                                "AgentGeneratedMessageLoopDetectionInSubmissionEnabled":  true,
                                "AllowLegacyTLSClients":  null,
                                "AnonymousSenderToRecipientRatePerHour":  1800,
                                "AttributionRejectBeforeMServRequest":  false,
                                "AttributionRejectConsumerMessages":  false,
                                "ClearCategories":  true,
                                "ConvertDisclaimerWrapperToEml":  false,
                                "ConvertReportToMessage":  false,
                                "DSNConversionMode":  "PreserveDSNBody",
                                "DiagnosticsAggregationServicePort":  9710,
                                "DistinguishedName":  "CN=Transport Settings,CN=Configuration,CN=tqhjy.onmicrosoft.com,CN=ConfigurationUnits,DC=NAMPR09A006,DC=PROD,DC=OUTLOOK,DC=COM",
                                "EnableExternalHTTPMailDelivery":  false,
                                "ExchangeObjectId":  "7ef195bd-4f88-46bc-97e6-db6c7665321b",
                                "ExchangeVersion":  "0.1 (8.0.535.0)",
                                "ExternalDelayDsnEnabled":  true,
                                "ExternalDsnDefaultLanguage":  null,
                                "ExternalDsnLanguageDetectionEnabled":  true,
                                "ExternalDsnMaxMessageAttachSize":  "10 MB (10,485,760 bytes)",
                                "ExternalDsnReportingAuthority":  null,
                                "ExternalDsnSendHtml":  true,
                                "ExternalPostmasterAddress":  null,
                                "GenerateCopyOfDSNFor":  [

                                                         ],
                                "Guid":  "01d25010-40a8-4d0a-9419-fb1d775b4d16",
                                "HeaderPromotionModeSetting":  "NoCreate",
                                "HygieneSuite":  "Premium",
                                "Id":  "Transport Settings",
                                "Identity":  "Transport Settings",
                                "InternalDelayDsnEnabled":  true,
                                "InternalDsnDefaultLanguage":  null,
                                "InternalDsnLanguageDetectionEnabled":  true,
                                "InternalDsnMaxMessageAttachSize":  "10 MB (10,485,760 bytes)",
                                "InternalDsnReportingAuthority":  null,
                                "InternalDsnSendHtml":  true,
                                "InternalSMTPServers":  [

                                                        ],
                                "IsValid":  true,
                                "JournalArchivingEnabled":  false,
                                "JournalMessageExpirationDays":  0,
                                "JournalReportDLMemberSubstitutionEnabled":  false,
                                "JournalingReportNdrTo":  "\u003c\u003e",
                                "LegacyArchiveJournalingEnabled":  false,
                                "LegacyArchiveLiveJournalingEnabled":  false,
                                "LegacyJournalingMigrationEnabled":  false,
                                "MaxAllowedAgentGeneratedMessageDepth":  3,
                                "MaxAllowedAgentGeneratedMessageDepthPerAgent":  2,
                                "MaxDumpsterSizePerDatabase":  "18 MB (18,874,368 bytes)",
                                "MaxDumpsterTime":  "7.00:00:00",
                                "MaxReceiveSize":  "Unlimited",
                                "MaxRecipientEnvelopeLimit":  "Unlimited",
                                "MaxSendSize":  "Unlimited",
                                "MessageExpiration":  "1.00:00:00",
                                "MigrationEnabled":  true,
                                "Name":  "Transport Settings",
                                "ObjectCategory":  "NAMPR09A006.PROD.OUTLOOK.COM/Configuration/Schema/ms-Exch-Transport-Settings",
                                "ObjectClass":  [
                                                    "top",
                                                    "container",
                                                    "msExchTransportSettings"
                                                ],
                                "ObjectState":  "Unchanged",
                                "OpenDomainRoutingEnabled":  false,
                                "OrganizationFederatedMailbox":  "johndoe@example.com",
                                "OrganizationId":  "NAMPR09A006.PROD.OUTLOOK.COM/Microsoft Exchange Hosted Organizations/tqhjy.onmicrosoft.com - NAMPR09A006.PROD.OUTLOOK.COM/ConfigurationUnits/tqhjy.onmicrosoft.com/Configuration",
                                "OrganizationalUnitRoot":  "tqhjy.onmicrosoft.com",
                                "OriginatingServer":  "BY1PR09A06DC005.NAMPR09A006.PROD.OUTLOOK.COM",
                                "OtherWellKnownObjects":  [

                                                          ],
                                "PreserveReportBodypart":  true,
                                "PreventDuplicateJournalingEnabled":  false,
                                "QueueDiagnosticsAggregationInterval":  "00:01:00",
                                "RedirectDLMessagesForLegacyArchiveJournaling":  false,
                                "RedirectUnprovisionedUserMessagesForLegacyArchiveJournaling":  false,
                                "ReplyAllStormBlockDurationHours":  6,
                                "ReplyAllStormDetectionMinimumRecipients":  2500,
                                "ReplyAllStormDetectionMinimumReplies":  10,
                                "ReplyAllStormProtectionEnabled":  true,
                                "Rfc2231EncodingEnabled":  false,
                                "SafetyNetHoldTime":  "7.00:00:00",
                                "SmtpClientAuthenticationDisabled":  true,
                                "SupervisionTags":  [
                                                        "Reject",
                                                        "Allow"
                                                    ],
                                "TLSReceiveDomainSecureList":  [

                                                               ],
                                "TLSSendDomainSecureList":  [

                                                            ],
                                "TransportRuleAttachmentTextScanLimit":  "1 MB (1,048,576 bytes)",
                                "TransportRuleCollectionAddedRecipientsLimit":  100,
                                "TransportRuleCollectionRegexCharsLimit":  "20 KB (20,480 bytes)",
                                "TransportRuleConfig":  [
                                                            "TransportRuleMinProductVersion:14.0.0.0",
                                                            "TransportRuleRegexValidationTimeout:00:00:00.3000000",
                                                            "TransportRuleAttachmentTextScanLimit:1 MB (1,048,576 bytes)",
                                                            "TransportRuleSizeLimit:8 KB (8,192 bytes)",
                                                            "TransportRuleCollectionRegexCharsLimit:20 KB (20,480 bytes)",
                                                            "TransportRuleLimit:300",
                                                            "TransportRuleCollectionAddedRecipientsLimit:100"
                                                        ],
                                "TransportRuleLimit":  300,
                                "TransportRuleMinProductVersion":  {
                                                                       "Build":  0,
                                                                       "Major":  14,
                                                                       "MajorRevision":  0,
                                                                       "Minor":  0,
                                                                       "MinorRevision":  0,
                                                                       "Revision":  0
                                                                   },
                                "TransportRuleRegexValidationTimeout":  "00:00:00.3000000",
                                "TransportRuleSizeLimit":  "8 KB (8,192 bytes)",
                                "VerifySecureSubmitEnabled":  false,
                                "VoicemailJournalingEnabled":  true,
                                "WhenChanged":  "/Date(1739359805000)/",
                                "WhenChangedUTC":  "/Date(1739359805000)/",
                                "WhenCreated":  "/Date(1619484398000)/",
                                "WhenCreatedUTC":  "/Date(1619484398000)/",
                                "Xexch50Enabled":  true
                            }
                        ],
        "Commandlet":  [
                           "Get-TransportConfig"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.EXO.5.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            {
                                "AdminDisplayName":  "",
                                "Default":  true,
                                "DistinguishedName":  "CN=Default Sharing Policy,CN=Federation,CN=Configuration,CN=tqhjy.onmicrosoft.com,CN=ConfigurationUnits,DC=NAMPR09A006,DC=PROD,DC=OUTLOOK,DC=COM",
                                "Domains":  [
                                                "Anonymous:0"
                                            ],
                                "Enabled":  false,
                                "ExchangeObjectId":  "2d52a1ae-4c17-42e0-925e-919b2bf68a18",
                                "ExchangeVersion":  "0.10 (14.0.100.0)",
                                "Guid":  "137df5c0-4fe4-49bb-923c-e2bdfd89f448",
                                "Id":  "Default Sharing Policy",
                                "Identity":  "Default Sharing Policy",
                                "IsValid":  true,
                                "Name":  "Default Sharing Policy",
                                "ObjectCategory":  "NAMPR09A006.PROD.OUTLOOK.COM/Configuration/Schema/ms-Exch-Sharing-Policy",
                                "ObjectClass":  [
                                                    "top",
                                                    "msExchSharingPolicy"
                                                ],
                                "ObjectState":  "Changed",
                                "OrganizationId":  "NAMPR09A006.PROD.OUTLOOK.COM/Microsoft Exchange Hosted Organizations/tqhjy.onmicrosoft.com - NAMPR09A006.PROD.OUTLOOK.COM/ConfigurationUnits/tqhjy.onmicrosoft.com/Configuration",
                                "OrganizationalUnitRoot":  "tqhjy.onmicrosoft.com",
                                "OriginatingServer":  "BY1PR09A06DC005.NAMPR09A006.PROD.OUTLOOK.COM",
                                "WhenChanged":  "/Date(1723848739000)/",
                                "WhenChangedUTC":  "/Date(1723848739000)/",
                                "WhenCreated":  "/Date(1619484547000)/",
                                "WhenCreatedUTC":  "/Date(1619484547000)/"
                            }
                        ],
        "Commandlet":  [
                           "Get-SharingPolicy"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.EXO.6.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            {
                                "AdminDisplayName":  "",
                                "Default":  true,
                                "DistinguishedName":  "CN=Default Sharing Policy,CN=Federation,CN=Configuration,CN=tqhjy.onmicrosoft.com,CN=ConfigurationUnits,DC=NAMPR09A006,DC=PROD,DC=OUTLOOK,DC=COM",
                                "Domains":  [
                                                "Anonymous:0"
                                            ],
                                "Enabled":  false,
                                "ExchangeObjectId":  "2d52a1ae-4c17-42e0-925e-919b2bf68a18",
                                "ExchangeVersion":  "0.10 (14.0.100.0)",
                                "Guid":  "137df5c0-4fe4-49bb-923c-e2bdfd89f448",
                                "Id":  "Default Sharing Policy",
                                "Identity":  "Default Sharing Policy",
                                "IsValid":  true,
                                "Name":  "Default Sharing Policy",
                                "ObjectCategory":  "NAMPR09A006.PROD.OUTLOOK.COM/Configuration/Schema/ms-Exch-Sharing-Policy",
                                "ObjectClass":  [
                                                    "top",
                                                    "msExchSharingPolicy"
                                                ],
                                "ObjectState":  "Changed",
                                "OrganizationId":  "NAMPR09A006.PROD.OUTLOOK.COM/Microsoft Exchange Hosted Organizations/tqhjy.onmicrosoft.com - NAMPR09A006.PROD.OUTLOOK.COM/ConfigurationUnits/tqhjy.onmicrosoft.com/Configuration",
                                "OrganizationalUnitRoot":  "tqhjy.onmicrosoft.com",
                                "OriginatingServer":  "BY1PR09A06DC005.NAMPR09A006.PROD.OUTLOOK.COM",
                                "WhenChanged":  "/Date(1723848739000)/",
                                "WhenChangedUTC":  "/Date(1723848739000)/",
                                "WhenCreated":  "/Date(1619484547000)/",
                                "WhenCreatedUTC":  "/Date(1619484547000)/"
                            }
                        ],
        "Commandlet":  [
                           "Get-SharingPolicy"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.EXO.6.2v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            {
                                "AdminDisplayName":  "",
                                "DirectoryBasedEdgeBlockMode":  "Default",
                                "DistinguishedName":  "CN=Default,CN=Hosted Connection Filter,CN=Transport Settings,CN=Configuration,CN=tqhjy.onmicrosoft.com,CN=ConfigurationUnits,DC=NAMPR09A006,DC=PROD,DC=OUTLOOK,DC=COM",
                                "EnableSafeList":  false,
                                "ExchangeObjectId":  "7021b7cf-b9fa-4280-94ff-fba468dbb0ab",
                                "ExchangeVersion":  "0.20 (15.0.0.0)",
                                "Guid":  "ddb99cb3-211b-47ee-bc9c-86e6c8d0e692",
                                "IPAllowList":  [

                                                ],
                                "IPBlockList":  [

                                                ],
                                "Id":  "Default",
                                "Identity":  "Default",
                                "IsDefault":  true,
                                "IsValid":  true,
                                "Name":  "Default",
                                "ObjectCategory":  "NAMPR09A006.PROD.OUTLOOK.COM/Configuration/Schema/ms-Exch-Hosted-Connection-Filter-Policy",
                                "ObjectClass":  [
                                                    "top",
                                                    "msExchHostedConnectionFilterPolicy"
                                                ],
                                "ObjectState":  "Unchanged",
                                "OrganizationId":  "NAMPR09A006.PROD.OUTLOOK.COM/Microsoft Exchange Hosted Organizations/tqhjy.onmicrosoft.com - NAMPR09A006.PROD.OUTLOOK.COM/ConfigurationUnits/tqhjy.onmicrosoft.com/Configuration",
                                "OrganizationalUnitRoot":  "tqhjy.onmicrosoft.com",
                                "OriginatingServer":  "BY1PR09A06DC005.NAMPR09A006.PROD.OUTLOOK.COM",
                                "WhenChanged":  "/Date(1739360298000)/",
                                "WhenChangedUTC":  "/Date(1739360298000)/",
                                "WhenCreated":  "/Date(1619484586000)/",
                                "WhenCreatedUTC":  "/Date(1619484586000)/"
                            }
                        ],
        "Commandlet":  [
                           "Get-HostedConnectionFilterPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.EXO.12.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            {
                                "AdminDisplayName":  "",
                                "DirectoryBasedEdgeBlockMode":  "Default",
                                "DistinguishedName":  "CN=Default,CN=Hosted Connection Filter,CN=Transport Settings,CN=Configuration,CN=tqhjy.onmicrosoft.com,CN=ConfigurationUnits,DC=NAMPR09A006,DC=PROD,DC=OUTLOOK,DC=COM",
                                "EnableSafeList":  false,
                                "ExchangeObjectId":  "7021b7cf-b9fa-4280-94ff-fba468dbb0ab",
                                "ExchangeVersion":  "0.20 (15.0.0.0)",
                                "Guid":  "ddb99cb3-211b-47ee-bc9c-86e6c8d0e692",
                                "IPAllowList":  [

                                                ],
                                "IPBlockList":  [

                                                ],
                                "Id":  "Default",
                                "Identity":  "Default",
                                "IsDefault":  true,
                                "IsValid":  true,
                                "Name":  "Default",
                                "ObjectCategory":  "NAMPR09A006.PROD.OUTLOOK.COM/Configuration/Schema/ms-Exch-Hosted-Connection-Filter-Policy",
                                "ObjectClass":  [
                                                    "top",
                                                    "msExchHostedConnectionFilterPolicy"
                                                ],
                                "ObjectState":  "Unchanged",
                                "OrganizationId":  "NAMPR09A006.PROD.OUTLOOK.COM/Microsoft Exchange Hosted Organizations/tqhjy.onmicrosoft.com - NAMPR09A006.PROD.OUTLOOK.COM/ConfigurationUnits/tqhjy.onmicrosoft.com/Configuration",
                                "OrganizationalUnitRoot":  "tqhjy.onmicrosoft.com",
                                "OriginatingServer":  "BY1PR09A06DC005.NAMPR09A006.PROD.OUTLOOK.COM",
                                "WhenChanged":  "/Date(1739360298000)/",
                                "WhenChangedUTC":  "/Date(1739360298000)/",
                                "WhenCreated":  "/Date(1619484586000)/",
                                "WhenCreatedUTC":  "/Date(1619484586000)/"
                            }
                        ],
        "Commandlet":  [
                           "Get-HostedConnectionFilterPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.EXO.12.2v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            {
                                "AuditDisabled":  false,
                                "DisplayName":  "tqhjy",
                                "Name":  "tqhjy.onmicrosoft.com"
                            }
                        ],
        "Commandlet":  [
                           "Get-OrganizationConfig"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.EXO.13.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            {
                                "domain":  "tqhjy.onmicrosoft.com",
                                "log":  [
                                            {
                                                "query_method":  "traditional",
                                                "query_name":  "_dmarc.tqhjy.onmicrosoft.com",
                                                "query_result":  "Query returned NXDomain"
                                            },
                                            {
                                                "query_method":  "traditional",
                                                "query_name":  "_dmarc.onmicrosoft.com",
                                                "query_result":  "Query returned NXDomain"
                                            }
                                        ],
                                "rdata":  [

                                          ]
                            },
                            {
                                "domain":  "tqhjy.mail.onmicrosoft.com",
                                "log":  [
                                            {
                                                "query_method":  "traditional",
                                                "query_name":  "_dmarc.tqhjy.mail.onmicrosoft.com",
                                                "query_result":  "Query returned NXDomain"
                                            },
                                            {
                                                "query_method":  "traditional",
                                                "query_name":  "_dmarc.onmicrosoft.com",
                                                "query_result":  "Query returned NXDomain"
                                            }
                                        ],
                                "rdata":  [

                                          ]
                            }
                        ],
        "Commandlet":  [
                           "Get-ScubaDmarcRecord",
                           "Get-AcceptedDomain"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.EXO.4.1v1",
        "ReportDetails":  "2 agency domain(s) found in violation: tqhjy.mail.onmicrosoft.com, tqhjy.onmicrosoft.com",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            {
                                "domain":  "tqhjy.onmicrosoft.com",
                                "log":  [
                                            {
                                                "query_method":  "traditional",
                                                "query_name":  "_dmarc.tqhjy.onmicrosoft.com",
                                                "query_result":  "Query returned NXDomain"
                                            },
                                            {
                                                "query_method":  "traditional",
                                                "query_name":  "_dmarc.onmicrosoft.com",
                                                "query_result":  "Query returned NXDomain"
                                            }
                                        ],
                                "rdata":  [

                                          ]
                            },
                            {
                                "domain":  "tqhjy.mail.onmicrosoft.com",
                                "log":  [
                                            {
                                                "query_method":  "traditional",
                                                "query_name":  "_dmarc.tqhjy.mail.onmicrosoft.com",
                                                "query_result":  "Query returned NXDomain"
                                            },
                                            {
                                                "query_method":  "traditional",
                                                "query_name":  "_dmarc.onmicrosoft.com",
                                                "query_result":  "Query returned NXDomain"
                                            }
                                        ],
                                "rdata":  [

                                          ]
                            }
                        ],
        "Commandlet":  [
                           "Get-ScubaDmarcRecord",
                           "Get-AcceptedDomain"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.EXO.4.2v1",
        "ReportDetails":  "2 agency domain(s) found in violation: tqhjy.mail.onmicrosoft.com, tqhjy.onmicrosoft.com",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            {
                                "domain":  "tqhjy.onmicrosoft.com",
                                "log":  [
                                            {
                                                "query_method":  "traditional",
                                                "query_name":  "_dmarc.tqhjy.onmicrosoft.com",
                                                "query_result":  "Query returned NXDomain"
                                            },
                                            {
                                                "query_method":  "traditional",
                                                "query_name":  "_dmarc.onmicrosoft.com",
                                                "query_result":  "Query returned NXDomain"
                                            }
                                        ],
                                "rdata":  [

                                          ]
                            },
                            {
                                "domain":  "tqhjy.mail.onmicrosoft.com",
                                "log":  [
                                            {
                                                "query_method":  "traditional",
                                                "query_name":  "_dmarc.tqhjy.mail.onmicrosoft.com",
                                                "query_result":  "Query returned NXDomain"
                                            },
                                            {
                                                "query_method":  "traditional",
                                                "query_name":  "_dmarc.onmicrosoft.com",
                                                "query_result":  "Query returned NXDomain"
                                            }
                                        ],
                                "rdata":  [

                                          ]
                            }
                        ],
        "Commandlet":  [
                           "Get-ScubaDmarcRecord",
                           "Get-AcceptedDomain"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.EXO.4.3v1",
        "ReportDetails":  "2 agency domain(s) found in violation: tqhjy.mail.onmicrosoft.com, tqhjy.onmicrosoft.com",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            {
                                "domain":  "tqhjy.onmicrosoft.com",
                                "log":  [
                                            {
                                                "query_method":  "traditional",
                                                "query_name":  "_dmarc.tqhjy.onmicrosoft.com",
                                                "query_result":  "Query returned NXDomain"
                                            },
                                            {
                                                "query_method":  "traditional",
                                                "query_name":  "_dmarc.onmicrosoft.com",
                                                "query_result":  "Query returned NXDomain"
                                            }
                                        ],
                                "rdata":  [

                                          ]
                            },
                            {
                                "domain":  "tqhjy.mail.onmicrosoft.com",
                                "log":  [
                                            {
                                                "query_method":  "traditional",
                                                "query_name":  "_dmarc.tqhjy.mail.onmicrosoft.com",
                                                "query_result":  "Query returned NXDomain"
                                            },
                                            {
                                                "query_method":  "traditional",
                                                "query_name":  "_dmarc.onmicrosoft.com",
                                                "query_result":  "Query returned NXDomain"
                                            }
                                        ],
                                "rdata":  [

                                          ]
                            }
                        ],
        "Commandlet":  [
                           "Get-ScubaDmarcRecord",
                           "Get-AcceptedDomain"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.EXO.4.4v1",
        "ReportDetails":  "2 agency domain(s) found in violation: tqhjy.mail.onmicrosoft.com, tqhjy.onmicrosoft.com",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-RemoteDomain"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.EXO.1.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-ScubaSpfRecord",
                           "Get-AcceptedDomain"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.EXO.2.2v2",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  false,
        "Commandlet":  [
                           "Get-PowerAppTenantIsolationPolicy"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.POWERPLATFORM.3.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  true,
        "Commandlet":  [
                           "Get-TenantSettings"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.POWERPLATFORM.1.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  true,
        "Commandlet":  [
                           "Get-TenantSettings"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.POWERPLATFORM.1.2v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  true,
        "Commandlet":  [
                           "Get-TenantSettings"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.POWERPLATFORM.5.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/Not-Implemented",
        "PolicyId":  "MS.POWERPLATFORM.4.1v1",
        "ReportDetails":  "This product does not currently have the capability to check compliance for this policy. See \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/powerplatform.md#mspowerplatform41v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on manual check",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/Not-Implemented",
        "PolicyId":  "MS.POWERPLATFORM.3.2v1",
        "ReportDetails":  "This product does not currently have the capability to check compliance for this policy. See \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/powerplatform.md#mspowerplatform32v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on manual check",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-DlpPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.POWERPLATFORM.2.3v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            "2c9cc86c-7a06-4162-adc0-be71f93abb4d"
                        ],
        "Commandlet":  [
                           "Get-DlpPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.POWERPLATFORM.2.2v1",
        "ReportDetails":  "1 Subsequent environments without DLP policies: 2c9cc86c-7a06-4162-adc0-be71f93abb4d",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            {
                                "PolicyName":  "DLP functional test"
                            }
                        ],
        "Commandlet":  [
                           "Get-DlpPolicy"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.POWERPLATFORM.2.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-SPOTenant"
                       ],
        "Criticality":  "Shall/Not-Implemented",
        "PolicyId":  "MS.SHAREPOINT.3.1v1",
        "ReportDetails":  "This policy is only applicable if the external sharing slider on the admin page is set to Anyone. See \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/sharepoint.md#mssharepoint31v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for more info",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-SPOTenant",
                           "Get-PnPTenant"
                       ],
        "Criticality":  "Shall/Not-Implemented",
        "PolicyId":  "MS.SHAREPOINT.1.3v1",
        "ReportDetails":  "This policy is only applicable if the external sharing slider on the admin page is not set to Only People In Your Organization. See \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/sharepoint.md#mssharepoint13v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for more info",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-SPOTenant",
                           "Get-PnPTenant"
                       ],
        "Criticality":  "Shall/Not-Implemented",
        "PolicyId":  "MS.SHAREPOINT.1.4v1",
        "ReportDetails":  "This configuration setting has been deprecated and we are in the process of removing it from the baseline.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-SPOTenant",
                           "Get-PnPTenant"
                       ],
        "Criticality":  "Shall/Not-Implemented",
        "PolicyId":  "MS.SHAREPOINT.3.2v1",
        "ReportDetails":  "This policy is only applicable if the external sharing slider on the admin page is set to Anyone. See \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/sharepoint.md#mssharepoint32v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for more info",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-SPOTenant",
                           "Get-PnPTenant"
                       ],
        "Criticality":  "Shall/Not-Implemented",
        "PolicyId":  "MS.SHAREPOINT.3.3v1",
        "ReportDetails":  "This policy is only applicable if the external sharing slider on the admin page is set to Anyone or New and Existing Guests. See \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/sharepoint.md#mssharepoint33v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for more info",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            0
                        ],
        "Commandlet":  [
                           "Get-SPOTenant",
                           "Get-PnPTenant"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.SHAREPOINT.1.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            0
                        ],
        "Commandlet":  [
                           "Get-SPOTenant",
                           "Get-PnPTenant"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.SHAREPOINT.1.2v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            1
                        ],
        "Commandlet":  [
                           "Get-SPOTenant",
                           "Get-PnPTenant"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.SHAREPOINT.2.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [
                            1
                        ],
        "Commandlet":  [
                           "Get-SPOTenant",
                           "Get-PnPTenant"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.SHAREPOINT.2.2v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  false,
        "Commandlet":  [
                           "Get-CsTeamsMeetingPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.TEAMS.1.6v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  "EveryoneInCompanyExcludingGuests",
        "Commandlet":  [
                           "Get-CsTeamsMeetingPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.TEAMS.1.4v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  "UserOverride",
        "Commandlet":  [
                           "Get-CsTeamsMeetingBroadcastPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.TEAMS.1.7v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/3rd Party",
        "PolicyId":  "MS.TEAMS.6.1v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/teams.md#msteams61v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Shall/3rd Party",
        "PolicyId":  "MS.TEAMS.6.2v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/teams.md#msteams62v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/3rd Party",
        "PolicyId":  "MS.TEAMS.7.1v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/teams.md#msteams71v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/3rd Party",
        "PolicyId":  "MS.TEAMS.7.2v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/teams.md#msteams72v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/3rd Party",
        "PolicyId":  "MS.TEAMS.8.1v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/teams.md#msteams81v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [

                       ],
        "Criticality":  "Should/3rd Party",
        "PolicyId":  "MS.TEAMS.8.2v1",
        "ReportDetails":  "A custom product can be used to fulfill this policy requirement. If a custom product is used, a 3rd party assessment tool or manual review is needed to ensure compliance. If you are using Defender for Office 365 to implement this policy, ensure when running ScubaGear that \u0027defender\u0027 is an argument to the -ProductNames parameter. Then, review the corresponding Defender policy that fulfills the requirements of this policy on the Defender ScubaGear HTML report. See the \u003ca href=\"https://github.com/cisagov/ScubaGear/blob/v1.5.0/PowerShell/ScubaGear/baselines/teams.md#msteams82v1\" target=\"_blank\"\u003eSecure Configuration Baseline policy\u003c/a\u003e for instructions on a manual check.",
        "RequirementMet":  false
    },
    {
        "ActualValue":  [
                            "EveryoneInCompanyExcludingGuests",
                            false
                        ],
        "Commandlet":  [
                           "Get-CsTeamsMeetingPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.TEAMS.1.3v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  {
                            "AssignedPlans":  "MCOEV, Teams_GCC, MCOProfessional, MCOMEETADD",
                            "ClientConfig":  [
                                                 {
                                                     "AllowBox":  true,
                                                     "AllowDropBox":  true,
                                                     "AllowEgnyte":  true,
                                                     "AllowEmailIntoChannel":  false,
                                                     "AllowGoogleDrive":  true,
                                                     "AllowGuestUser":  true,
                                                     "AllowOrganizationTab":  true,
                                                     "AllowResourceAccountSendMessage":  true,
                                                     "AllowRoleBasedChatPermissions":  false,
                                                     "AllowScopedPeopleSearchandAccess":  false,
                                                     "AllowShareFile":  true,
                                                     "AllowSkypeBusinessInterop":  true,
                                                     "ContentPin":  "RequiredOutsideScheduleMeeting",
                                                     "ExtendedWorkInfoInPeopleSearch":  false,
                                                     "Identity":  "Global",
                                                     "ResourceAccountContentAccess":  "NoAccess",
                                                     "RestrictedSenderList":  null
                                                 }
                                             ]
                        },
        "Commandlet":  [
                           "Get-CsTeamsClientConfiguration",
                           "Get-CsTenant"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.TEAMS.4.1v1",
        "ReportDetails":  "N/A: Feature is unavailable in GCC environments",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-CsTeamsAppPermissionPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.TEAMS.5.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-CsTeamsAppPermissionPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.TEAMS.5.2v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-CsTeamsAppPermissionPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.TEAMS.5.3v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-CsTeamsMeetingPolicy"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.TEAMS.1.2v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-CsTeamsMeetingPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.TEAMS.1.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-CsTeamsMeetingPolicy"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.TEAMS.1.5v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-CsTenantFederationConfiguration"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.TEAMS.2.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-CsTenantFederationConfiguration"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.TEAMS.2.2v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-CsTenantFederationConfiguration"
                       ],
        "Criticality":  "Shall",
        "PolicyId":  "MS.TEAMS.3.1v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    },
    {
        "ActualValue":  [

                        ],
        "Commandlet":  [
                           "Get-CsTenantFederationConfiguration"
                       ],
        "Criticality":  "Should",
        "PolicyId":  "MS.TEAMS.2.3v1",
        "ReportDetails":  "Requirement met",
        "RequirementMet":  true
    }
]
